<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * Product view template
 *
 * @see Mage_Catalog_Block_Product_View
 * @see Mage_Review_Block_Product_View
 */
$otherconfig = Mage::getStoreConfig('mtlaniusadmin/otherconfig');
?>
<?php $_helper = $this->helper('catalog/output'); ?>
<?php $_product = $this->getProduct(); ?>
 
<script type="text/javascript">
    var optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
</script>
<div id="messages_product_view"><?php echo $this->getMessagesBlock()->getGroupedHtml() ?></div>
<div class="product-view ">
    <div class="product-essential row-fluid show-grid">
    <form action="<?php echo $this->getSubmitUrl($_product) ?>" method="post" id="product_addtocart_form"<?php if($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
        
		
	    <div class="row-fluid show-grid">
        <div class="product-img-box span5">
            <?php echo $this->getChildHtml('media') ?>
        </div>               
        <div class="product-shop span7">
			<div class="products-shop-bt">
				
				<div class="product-name">
        	<h1><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></h1>
          <h7>Cod produs: <strong><?php echo $this->htmlEscape($_product->getSku()); ?></strong></h7>
        </div>
        
        <?php if ($_product->getShortDescription()):?>
            <div class="short-description">
                <div class="std"><?php echo $_helper->productAttribute($_product, nl2br($_product->getShortDescription()), 'short_description') ?></div>
            </div>
        <?php endif;?>


				<!-- Price and availability -->
				
			  <?php echo $this->getChildHtml('alert_urls') ?>

				<div class="products-type">
	        <?php echo $this->getChildHtml('product_type_data') ?>
				</div>
				
				<div class="price-and-add">
					<div class="price-div">	      
						<?php echo $this->getChildHtml('product_type_data_extra') ?>
						<?php echo $this->getPriceHtml($_product) ?>

						<?php echo $this->getTierPriceHtml() ?>
			      <?php echo $this->getChildHtml('extrahint') ?>

			     	<?php if ( !($_product->getTypeInstance(true)->hasRequiredOptions($_product) || $_product->isGrouped()) ) { ?>
			     		<input type="hidden" id="optioncheck" name="optioncheck" value="0"/>
			     	<?php }else{?>
			     		<input type="hidden" id="optioncheck" name="optioncheck" value="1"/>
			     	<?php }?>
					</div>

					<div class="add-div">	      
			      <?php if (!$this->hasOptions()):?>
			          <div class="add-to-box">
			              <?php if($_product->isSaleable()): ?>
		
			                  <?php echo $this->getChildHtml('addtocart') ?>
	
			                  <?php if( $this->helper('wishlist')->isAllow() || $_compareUrl=$this->helper('catalog/product_compare')->getAddUrl($_product)): ?>
			                      <!--<span class="or"><?php echo $this->__('OR') ?></span>-->
			                  <?php endif; ?>
			              <?php endif; ?>

			          </div>
			          <?php echo $this->getChildHtml('extra_buttons') ?>
			      <?php elseif (!$_product->isSaleable()): ?>
			          <div class="add-to-box">
			              <?php echo $this->getChildHtml('addto') ?>
			          </div>
			      <?php endif; ?>
					</div>

					<div class="clearer"></div>
				</div>

				<div class="section">
					<div class="clearer"></div>
				</div>


	      <?php echo $this->getChildHtml('other');?>

	      <?php if ($_product->isSaleable() && $this->hasOptions()):?>
	          <?php echo $this->getChildChildHtml('container1', '', true, true) ?>
	      <?php endif;?>

				<div class="clearer"></div>

	      <?php if ($_product->isSaleable() && $this->hasOptions()):?>
	          <?php echo $this->getChildChildHtml('container2', '', true, true) ?>
	      <?php endif;?>


				<div class="section section-padding">
					<?php echo $this->getChildHtml('addto') ?>
					<div class="clearer"></div>
				</div>

				
				<div class="section section-padding">
					<?php echo $this->getReviewsSummaryHtml($_product, false, true)?>
					<?php if ($this->canEmailToFriend()): ?>
						<p class="email-friend"><a href="<?php echo $this->helper('catalog/product')->getEmailToFriendUrl($_product) ?>"><?php echo $this->__('Email to a Friend') ?></a></p>
					<?php endif; ?>
					<div class="clearer"></div>
				</div>
											
				
				<div class="clearer"></div>
			</div>
	
   </div>               
            
         </div>
        </div>
    </form>
    <script type="text/javascript">
    //<![CDATA[
        var productAddToCartForm = new VarienForm('product_addtocart_form');
		<?php if($otherconfig['enabled_ajax']){?>
        productAddToCartForm.submit = function(button, url) { 
            if (this.validator.validate()) {
              var form = this.form;
              var oldUrl = form.action;

              if (url) {
                 form.action = url;
              }
              var e = null;
              if (!url) {
  							url = $mtkb('#product_addtocart_form').attr('action');
  						}

							if($mtkb('body').find('.viewquickloook').val()>0){
		   				 	try {
		              	this.form.submit();
			          } catch (e) {
			          }
	        		}
							else{ 
								url = url.replace("checkout/cart","mtlaniusadmin/index"); // New Code 
								var data = $mtkb('#product_addtocart_form').serialize(); 
								data += '&isAjax=1';  
								try {
									if($mtkb('#optioncheck').val()==0){
										if($mtkb('#qty').val()==0){ 
											$mtkb("span.textrepuired").html('<?php echo $this->__('The quantity not zero!');?>');
										}else{
											$mtkb("span.textrepuired").html('');
											$mtkb('.cart-loading').show();
											$mtkb('.cart').hide();
											// var cart_x = $mtkb('.top-cart').offset().left;
											// var cart_y = $mtkb('.top-cart').offset().top;
											// var product_x = $mtkb('.cloud-zoom').offset().left;
											// var product_y = $mtkb('.cloud-zoom').offset().top;
											// var gotoX = cart_x - product_x;
											// var gotoY = cart_y - product_y;
											// var newImageWidth = $mtkb('.cloud-zoom').width()/6;
											// var newImageHeight = $mtkb('.cloud-zoom').height()/6; 
											// $mtkb('.cloud-zoom img')
											// 	.clone()
											// 	.prependTo(".cloud-zoom")
											// 	.css({'position' : 'absolute'})
											// 	.animate({opacity: 0.8}, 100 )
											// 	.animate({opacity: 0, marginLeft: gotoX, marginTop: gotoY, width: newImageWidth, height: newImageHeight}, 1200, function() {
											// 		$mtkb('.cloud-zoom img:first').remove(); 
											// 	}); 
											$mtkb.ajax( {
												url : url,
												dataType : 'json',
												type : 'post',
												data : data,
												success : function(data) { 
													parent.setAjaxData(data,true);
													$mtkb('.cart-loading').hide();
													$mtkb('.cart').show();

													if (button && button != 'undefined') {
														button.disabled = false;
													}
												}
											});
										}  
									}else{
										$mtkb('.cart-loading').show();
					    				$mtkb('.cart').hide(); 
			    	    				// 		    	    			    var cart_x = $mtkb('.top-cart').offset().left;
			    	    				// var cart_y = $mtkb('.top-cart').offset().top;
			    	    				// var product_x = $mtkb('.cloud-zoom').offset().left;
			    	    				// var product_y = $mtkb('.cloud-zoom').offset().top;
			    	    				// var gotoX = cart_x - product_x;
			    	    				// var gotoY = cart_y - product_y;
			    	    				// var newImageWidth = $mtkb('.cloud-zoom').width()/6;
			    	    				// var newImageHeight = $mtkb('.cloud-zoom').height()/6; 
			    	    				// $mtkb('.cloud-zoom img')
			    	    				// .clone()
			    	    				// .prependTo(".cloud-zoom")
			    	    				// .css({'position' : 'absolute', 'z-index':'9999'})
			    	    				// .animate({opacity: 0.8}, 100 )
			    	    				// .animate({opacity: 0, marginLeft: gotoX, marginTop: gotoY, width: newImageWidth, height: newImageHeight}, 1200, function() {
			    	    				// 	$mtkb('.cloud-zoom img:first').remove(); 
			    	    				// });  
										$mtkb('.cart-loading').show();
										$mtkb('.cart').hide();
										$mtkb.ajax( {
											url : url,
											dataType : 'json',
											type : 'post',
											data : data,
											success : function(data) { 
												parent.setAjaxData(data,true);
												$mtkb('.cart-loading').hide();
												$mtkb('.cart').show();
											}
										});
									}
								} catch (e) {
									console.log (e);
								}
							}
							
							
							
              this.form.action = oldUrl;
              if (e) {
                  throw e;
              }

            }
        }.bind(productAddToCartForm);
		<?php }else{?>
		productAddToCartForm.submit = function(button, url) {
            if (this.validator.validate()) {
                var form = this.form;
                var oldUrl = form.action;

                if (url) {
                   form.action = url;
                }
                var e = null;
                try {
                    this.form.submit();
                } catch (e) {
                }
                this.form.action = oldUrl;
                if (e) {
                    throw e;
                }

                if (button && button != 'undefined') {
                    button.disabled = true;
                }
            }
        }.bind(productAddToCartForm);
		<?php }?>
        productAddToCartForm.submitLight = function(button, url){
            if(this.validator) {
                var nv = Validation.methods;
                delete Validation.methods['required-entry'];
                delete Validation.methods['validate-one-required'];
                delete Validation.methods['validate-one-required-by-name'];
                // Remove custom datetime validators
                for (var methodName in Validation.methods) {
                    if (methodName.match(/^validate-datetime-.*/i)) {
                        delete Validation.methods[methodName];
                    }
                }

                if (this.validator.validate()) {
                    if (url) {
                        this.form.action = url;
                    }
                    this.form.submit();
                }
                Object.extend(Validation.methods, nv);
            }
        }.bind(productAddToCartForm);
    //]]>
    </script>
	<div class="product-collateral">
        <?php echo $this->getChildHtml('info_tabs') ?>
        <?php echo $this->getChildHtml('product_additional_data') ?>
    </div>
    </div>

    
    <?php echo $this->getChildHtml('related_products') ?>
